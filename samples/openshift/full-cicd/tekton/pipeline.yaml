apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  annotations:
    pipelines.kubeflow.org/pipeline_spec: '{
      "description": "Build an image from code.",
      "name": "Iter8 pipeline"}'
  name: iter8-pipeline
spec:
  resources:
  - name: source
    type: git
  params:
  - name: CONTEXT
    description: Relative directory path to Dockerfile
  - name: COMMITS
    description: Number of commits to check
  - name: ACTION
    description: Action performed on the pull request
  - name: MERGED
    description: Whether or not pull request is merged
  - name: BRANCH
    description: The base branch of the pull request

  tasks:
  - name: is-build-needed
    taskRef:
      name: is-build-needed
    resources:
      inputs:
      - name: source
        resource: source
    params:
    - name: CONTEXT
      value: $(params.CONTEXT)
    - name: COMMITS
      value: $(params.COMMITS)
    - name: ACTION
      value: $(params.ACTION)
    - name: MERGED
      value: $(params.MERGED)
    - name: BRANCH
      value: $(params.BRANCH)

  - name: get-commit-id
    taskRef:
      name: get-commit-id
    resources:
      inputs:
      - name: source
        resource: source
    when:
    - input: "$(tasks.is-build-needed.results.needed)"
      operator: in
      values: ["yes"]

  - name: build-image
    taskRef:
      name: build-image
    resources:
      inputs:
      - name: source
        resource: source
    params:
    - name: IMAGE
      value: image-registry.openshift-image-registry.svc:5000/default/helloworld:v$(tasks.get-commit-id.results.commit-id)
    - name: CONTEXT
      value: $(params.CONTEXT)
    - name: EXTRA_ARGS
      value:
      - --skip-tls-verify
    when:
    - input: "$(tasks.is-build-needed.results.needed)"
      operator: in
      values: ["yes"]

  - name: start-experiment
    taskRef:
      name: start-experiment
    params:
    - name: VERSION
      value: $(tasks.get-commit-id.results.commit-id)
    - name: USER
      value: MY_ORG 
    - name: REPO
      value: iter8
    - name: BRANCH
      value: master
    - name: GITHUB-TOKEN-SECRET
      value: github-token
    when:
    - input: "$(tasks.is-build-needed.results.needed)"
      operator: in
      values: ["yes"]
    runAfter:
    - build-image
