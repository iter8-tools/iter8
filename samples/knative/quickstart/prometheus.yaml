# Partially working example...
# To be used in conjunction with commented out prometheus portions in platform-setup

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    creator: iter8
  name: iter8-prometheus
  namespace: metrics
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    creator: iter8
  name: iter8-prometheus
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/metrics
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    creator: iter8
  name: iter8-prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: iter8-prometheus
subjects:
- kind: ServiceAccount
  name: iter8-prometheus
  namespace: metrics
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels:
    creator: iter8
  name: iter8-prometheus
  namespace: metrics
spec:
  enableAdminAPI: false
  resources:
    requests:
      memory: 400Mi
  serviceAccountName: iter8-prometheus
  serviceMonitorNamespaceSelector: {}
  serviceMonitorSelector: {}
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: otel-monitor
  namespace: metrics
spec:
  namespaceSelector:
    any: true
  selector:
    matchLabels:
      app: otel-export
  endpoints:
  - port: prom-export
    interval: 10s