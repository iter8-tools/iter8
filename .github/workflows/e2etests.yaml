name: e2e test
on:
- push
- pull_request

jobs:
  knative-quickstart:
    name: e2e test knative quickstart experiment
    runs-on: ubuntu-latest
    if: true # if there is a change is install folder or there is a change in samples/knative/quickstart folder -- then run this job
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - uses: engineerd/setup-kind@v0.5.0
    - name: platform setup
      run: |
        export ITER8=$(pwd)
        $ITER8/samples/knative/quickstart/platformsetup.sh contour

    - name: create knative service and readiness check
      run: |
        export ITER8=$(pwd)
        kubectl apply -f $ITER8/samples/knative/quickstart/baseline.yaml
        kubectl apply -f $ITER8/samples/knative/quickstart/experimentalservice.yaml
        kubectl wait --for=condition=Ready ksvc/sample-app

    - name: create fortio job and create experiment
      run: |
        export ITER8=$(pwd)
        URL_VALUE=$(kubectl get ksvc sample-app -o json | jq .status.address.url)
        sed "s+URL_VALUE+${URL_VALUE}+g" $ITER8/samples/knative/quickstart/fortio.yaml | kubectl apply -f -
        kubectl apply -f $ITER8/samples/knative/quickstart/experiment.yaml

    - name: Sleep for experiment duration + 30 seconds
      run: sleep 300.0 # 12 iterations and 20 second interval
    
    - name: Check if experiment is complete and successful
      run: |
        #Check if experiment has completed
        completed="Completed"
        if [$(kubectl get experiment quickstart-exp -ojson | jq .status.stage)!=$completed]; then
          echo "Experiment status must be Completed"
          exit
        fi

        #Check if no errors are found in fortio

        #Check if recommended baseline is canary
        canary="candidate"
        if [$(kubectl get experiment quickstart-exp -ojson | jq .status.recommendedBaseline)!=$canary]; then
          echo "recommendedBaseline must be canary"
          exit
        fi

        #check if latest revision is true
        latestRevision=true
        if [$(kubectl get ksvc sample-app -ojson | jq '.spec.traffic[0].latestRevision')!=$latestRevision]; then
          echo "latestRevision must be true"
          exit
        fi

        #check if traffic percent is 100
        percent=100
        if [$(kubectl get ksvc sample-app -ojson | jq '.spec.traffic[0].percent')!=$percent]; then
          echo "percent must be 100"
          exit
        fi


