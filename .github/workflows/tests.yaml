name: tests

on:
  pull_request:

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Test and compute coverage
      run: make coverage # includes vet and lint
    - name: Enforce coverage
      run: |
        export COVERAGE=$(go tool cover -func coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')
        echo "code coverage is at ${COVERAGE}"
        if [ 1 -eq "$(echo "${COVERAGE} > 74.0" | bc)" ]; then \
          echo "all good... coverage is above 74.0%"; 
        else \
          echo "not good... coverage is not above 74.0%";
          exit 1
        fi

  load-test-http:
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Build and install Iter8
      run: make install
    - name: run httpbin
      run: |
        set -e
        docker pull kennethreitz/httpbin
        docker run -p 80:80 kennethreitz/httpbin &
        HOST_IP=$(ip -f inet addr show docker0 | grep -Po 'inet \K[\d.]+')
        echo "HOST_IP=$HOST_IP" >> $GITHUB_ENV
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://$HOST_IP/get)" != "200" ]]; do
          sleep 5; 
        done;
    - name: launch load-test-http
      run: |
        iter8 launch -c load-test-http --chartsParentDir ../ \
        --set url="http://$HOST_IP/post" \
        --set payloadURL= "https://httpbin.org/stream/1"
    - name: assert experiment completed without failures
      run: |
        iter8 assert -c completed -c nofailure

  static-check:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - uses: dominikh/staticcheck-action@v1.1.0
