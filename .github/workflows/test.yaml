name: Test

on:
  pull_request:
    branches:
    - master

jobs:
  assets:
    name: Publish binaries
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.19
    - uses: actions/checkout@v3
    - name: Create Dockerfile.dev
      run: |
        echo "# Small linux image with iter8 binary
        FROM debian:buster-slim
        
        # Install curl
        RUN apt-get update && apt-get install -y curl
        
        # Download iter8 compressed binary
        # use COPY instead of wget
        COPY _dist/iter8-linux-amd64.tar.gz iter8-linux-amd64.tar.gz
        
        # Extract iter8
        RUN tar -xvf iter8-linux-amd64.tar.gz
        
        # Extract iter8
        RUN mv linux-amd64/iter8 /bin/iter8" > Dockerfile.dev
    - name: Get version
      run: |
        tagref=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tagref
        echo "VERSION=${GITHUB_REF_NAME}" >> $GITHUB_ENV
    - name: Get owner
      run: |
        ownerrepo=${{ github.repository }}
        owner=$(echo $ownerrepo | cut -f1 -d/)
        if [[ "$owner" == "iter8-tools" ]]; then
          owner=iter8
        fi
        echo "OWNER=$owner" >> $GITHUB_ENV
    # - uses: docker/setup-buildx-action@v2
    # - uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_SECRET }}
    # - uses: docker/build-push-action@v4
    #   with:
    #     platforms: linux/amd64
    #     tags: ${{ env.OWNER }}/iter8-pr:${{ env.VERSION }}
    #     push: true
    #     build-args: |
    #       TAG=v${{ env.VERSION }}
    #     file: "{context}/Dockerfile.dev"

  kubernetes-load-test-http:
    name: HTTP load test (with readiness) at the edge of Kubernetes
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.19
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
    - name: Build and install Iter8
      run: make install
    - name: Start kind cluster
      uses: helm/kind-action@v1.5.0
      with:
        wait: 300s
    - run: |
        echo $(${{ env.OWNER }}/iter8-pr:${{ env.VERSION }})
        echo ${{ env.OWNER }}/iter8-pr:${{ env.VERSION }}
        env | sort
    - name: run httpbin
      run: |
        set -e
        kubectl create deploy httpbin --image=kennethreitz/httpbin --port=80
        kubectl expose deploy httpbin --port=80
    - name: install controller
      run: |
        helm install iter8 charts/controller --set image=puffinmuffin/iter8-grafana --set logLevel=trace
    - name: load-test-http in Kubernetes
      run: |
        iter8 k launch --localChart --chartName charts/iter8 \
        --set iter8Image=puffinmuffin/iter8-grafana \
        --set "tasks={ready,http}" \
        --set ready.deploy=httpbin \
        --set ready.service=httpbin \
        --set ready.timeout=60s \
        --set http.url=http://httpbin.default/get \
        --set http.duration="3s"
        sleep 60
        iter8 k log
        iter8 k delete
    - name: 
    # - name: Upload binaries to release
    #   uses: svenstaro/upload-release-action@v2
    #   with:
    #     repo_token: ${{ secrets.GITHUB_TOKEN }}
    #     file: _dist/iter8-*.tar.gz
    #     tag: ${{ github.ref }}
    #     overwrite: true
    #     file_glob: true
    # - name: Create checksum
    #   run: |
    #     VERSION=${GITHUB_REF#refs/*/}
    #     echo "VERSION=$VERSION" >> $GITHUB_ENV
    #     wget https://github.com/iter8-tools/iter8/archive/refs/tags/${VERSION}.zip
    #     sha256sum ${VERSION}.zip > checksum.txt
    #     wget https://github.com/iter8-tools/iter8/archive/refs/tags/${VERSION}.tar.gz
    #     sha256sum ${VERSION}.tar.gz >> checksum.txt
    #     cd _dist
    #     for f in iter8-*.tar.gz
    #     do
    #       sha256sum ${f} >> ../checksum.txt
    #     done
    #     # pick up darwin checksum and export it
    #     echo "SHAFORMAC=$(grep darwin ../checksum.txt | awk '{print $1}')" >> $GITHUB_ENV
    # - name: Upload checksum to release
    #   uses: svenstaro/upload-release-action@v2
    #   with:
    #     repo_token: ${{ secrets.GITHUB_TOKEN }}
    #     asset_name: checksum.txt
    #     file: checksum.txt
    #     tag: ${{ github.ref }}
    #     overwrite: true

#   build-and-push:
#     name: Push Iter8 image to Docker Hub
#     needs: assets
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#       with:
#         fetch-depth: 0
#     - name: Get version
#       run: |
#         tagref=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
#         # Strip "v" prefix from tagref
#         echo "VERSION=$(echo $tagref | sed -e 's/^v//')" >> $GITHUB_ENV
#         echo "MAJOR_MINOR_VERSION=$(echo $tagref | sed -e 's/^v//' -e 's,\([0-9]*\.[0-9]*\)\.\([0-9]*\),\1,')" >> $GITHUB_ENV
